name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE_MAGASIN: ${{ secrets.USERNAME }}/caisse-app-magasin
  DOCKER_IMAGE_MERE: ${{ secrets.USERNAME }}/caisse-app-mere
  DOCKER_IMAGE_LOGISTICS: ${{ secrets.USERNAME }}/caisse-app-logistic
  DOCKER_IMAGE_AUTH: ${{ secrets.USERNAME }}/caisse-app-auth

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Add Go bin to PATH
        run: echo "${HOME}/go/bin" >> $GITHUB_PATH

      - name: Run linter
        run: |
          find caisse_app_scaled -type f -exec sed -i 's|^\(\s*_ "caisse-app-scaled/docs/swagger/[^"]*"\)|// \1|' {} + ||true
          golangci-lint run ./...
          find caisse_app_scaled -type f -exec sed -i 's|^// \(\s*_ "caisse-app-scaled/docs/swagger/[^"]*"\)|\1|' {} + ||true
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: postgres
        ports:
          - 5435:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Initialize database
        run: |
          PGPASSWORD=test_password psql -h localhost -p 5435 -U test_user -d postgres -f data/init.sql

      - name: Run tests
        run: |
          find caisse_app_scaled -type f -exec sed -i 's|^\(\s*_ "caisse-app-scaled/docs/swagger/[^"]*"\)|// \1|' {} + ||true
          go test -v ./tests/...
          find caisse_app_scaled -type f -exec sed -i 's|^// \(\s*_ "caisse-app-scaled/docs/swagger/[^"]*"\)|\1|' {} + ||true

  build-and-push:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build app
        run: |
          mkdir -p out
          go get github.com/swaggo/swag/cmd/swag@latest
          cd caisse_app_scaled && go run github.com/swaggo/swag/cmd/swag init -d magasin,models,utils -o ../docs/swagger/magasin -g api/api_data.go && cd ..
          cd caisse_app_scaled && go run github.com/swaggo/swag/cmd/swag init -d centre_logistique,models,utils -o ../docs/swagger/logistique -g api/api_data.go && cd ..
          cd caisse_app_scaled && go run github.com/swaggo/swag/cmd/swag init -d maison_mere,models,utils -o ../docs/swagger/mere -g api/api_data.go && cd ..
          cd caisse_app_scaled && go run github.com/swaggo/swag/cmd/swag init -d auth,models,utils -o ../docs/swagger/auth -g api/api.go

          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o out/magasin/ ./caisse_app_scaled/magasin/app.go
          cp -rf caisse_app_scaled/magasin/view out/magasin/
          cp -rf caisse_app_scaled/commonjs out/magasin/
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o out/centre_logistique/ ./caisse_app_scaled/centre_logistique/app.go
          cp -rf caisse_app_scaled/centre_logistique/view out/centre_logistique/
          cp -rf caisse_app_scaled/commonjs out/centre_logistique/
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o out/maison_mere/ ./caisse_app_scaled/maison_mere/app.go
          cp -rf caisse_app_scaled/maison_mere/view out/maison_mere/
          cp -rf caisse_app_scaled/commonjs out/maison_mere/
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o out/auth/ ./caisse_app_scaled/auth/app.go

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PWD }}

      - name: Build and push Docker image magasin
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./caisse_app_scaled/magasin/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_MAGASIN }}:latest

      - name: Build and push Docker image mere
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./caisse_app_scaled/maison_mere/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_MERE }}:latest

      - name: Build and push Docker image logistique
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./caisse_app_scaled/centre_logistique/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_LOGISTICS }}:latest

      - name: Build and push Docker image auth
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./caisse_app_scaled/auth/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_AUTH }}:latest
